/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg8.puzzle;
import java.util.*;
import javax.swing.*;
import static pkg8.puzzle.BFS.solve;
/**
 *
 * @author Win10
 */
public class TheGame extends javax.swing.JFrame {

    /**
     * Creates new form TheGame
     */
    public TheGame() {
        initComponents();
        Object[] buttons = {b1,b2,b3,b4,b5,b6,b7,b8,b9};
        for (Object button : buttons) {
            if (button instanceof JButton) {
                JButton jButton = (JButton) button;
                String buttonText = jButton.getText().toString();
                if(buttonText.equals("0")){jButton.setVisible(false);}
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        bfs = new javax.swing.JRadioButton();
        dfs = new javax.swing.JRadioButton();
        astar = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        b1.setBackground(new java.awt.Color(255, 204, 0));
        b1.setText("0");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        b2.setBackground(new java.awt.Color(255, 204, 51));
        b2.setText("1");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        b3.setBackground(new java.awt.Color(255, 204, 0));
        b3.setText("2");
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        b4.setBackground(new java.awt.Color(255, 204, 0));
        b4.setText("3");
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });

        b5.setBackground(new java.awt.Color(255, 204, 0));
        b5.setText("4");
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });

        b6.setBackground(new java.awt.Color(255, 204, 0));
        b6.setText("5");
        b6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });

        b7.setBackground(new java.awt.Color(255, 204, 0));
        b7.setText("6");
        b7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b7ActionPerformed(evt);
            }
        });

        b8.setBackground(new java.awt.Color(255, 204, 0));
        b8.setText("7");
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });

        b9.setBackground(new java.awt.Color(255, 204, 0));
        b9.setText("8");
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setText("SOLVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        bfs.setBackground(new java.awt.Color(255, 51, 51));
        buttonGroup1.add(bfs);
        bfs.setText("BFS ( Breadth-First-Search )");
        bfs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bfsActionPerformed(evt);
            }
        });

        dfs.setBackground(new java.awt.Color(102, 102, 255));
        buttonGroup1.add(dfs);
        dfs.setText("DFS ( Depth-First-Search )");

        astar.setBackground(new java.awt.Color(51, 255, 51));
        buttonGroup1.add(astar);
        astar.setText("A* Search");

        area.setEditable(false);
        area.setColumns(20);
        area.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        area.setRows(5);
        jScrollPane1.setViewportView(area);

        jLabel1.setFont(new java.awt.Font("Ubuntu Mono", 1, 36)); // NOI18N
        jLabel1.setText("Details");

        jLabel2.setText("________________________________________________");

        jLabel3.setText("________________________________________________");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                            .addComponent(b6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bfs)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(astar)
                                    .addComponent(dfs))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(106, 106, 106)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {b1, b2, b3, b4, b5, b6, b7, b8, b9});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(b7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bfs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dfs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(astar))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {b1, b2, b3, b4, b5, b6, b7, b8, b9});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
      String B2=b2.getText().toString();
             if(b1.getText().toString().equals("0")){b1.setText(B2); b1.setVisible(true); b2.setText("0"); b2.setVisible(false);}
        else if(b3.getText().toString().equals("0")){b3.setText(B2); b3.setVisible(true); b2.setText("0"); b2.setVisible(false);}
        else if(b5.getText().toString().equals("0")){b5.setText(B2); b5.setVisible(true); b2.setText("0"); b2.setVisible(false);}
    }//GEN-LAST:event_b2ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
      String B1=b1.getText().toString();
             if(b2.getText().toString().equals("0")){b2.setText(B1); b2.setVisible(true); b1.setText("0"); b1.setVisible(false);}
        else if(b4.getText().toString().equals("0")){b4.setText(B1); b4.setVisible(true); b1.setText("0"); b1.setVisible(false);}
    }//GEN-LAST:event_b1ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
      String B3=b3.getText().toString();
             if(b2.getText().toString().equals("0")){b2.setText(B3); b2.setVisible(true); b3.setText("0"); b3.setVisible(false);}
        else if(b6.getText().toString().equals("0")){b6.setText(B3); b6.setVisible(true); b3.setText("0"); b3.setVisible(false);}
    }//GEN-LAST:event_b3ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
      String B4=b4.getText().toString();
             if(b1.getText().toString().equals("0")){b1.setText(B4); b1.setVisible(true); b4.setText("0"); b4.setVisible(false);}
        else if(b5.getText().toString().equals("0")){b5.setText(B4); b5.setVisible(true); b4.setText("0"); b4.setVisible(false);}
        else if(b7.getText().toString().equals("0")){b7.setText(B4); b7.setVisible(true); b4.setText("0"); b4.setVisible(false);}
    }//GEN-LAST:event_b4ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
      String B5=b5.getText().toString();
             if(b2.getText().toString().equals("0")){b2.setText(B5); b2.setVisible(true); b5.setText("0"); b5.setVisible(false);}
        else if(b4.getText().toString().equals("0")){b4.setText(B5); b4.setVisible(true); b5.setText("0"); b5.setVisible(false);}
        else if(b6.getText().toString().equals("0")){b6.setText(B5); b6.setVisible(true); b5.setText("0"); b5.setVisible(false);}
        else if(b8.getText().toString().equals("0")){b8.setText(B5); b8.setVisible(true); b5.setText("0"); b5.setVisible(false);}
    }//GEN-LAST:event_b5ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
      String B6=b6.getText().toString();
             if(b3.getText().toString().equals("0")){b3.setText(B6); b3.setVisible(true); b6.setText("0"); b6.setVisible(false);}
        else if(b5.getText().toString().equals("0")){b5.setText(B6); b5.setVisible(true); b6.setText("0"); b6.setVisible(false);}
        else if(b9.getText().toString().equals("0")){b9.setText(B6); b9.setVisible(true); b6.setText("0"); b6.setVisible(false);}
    }//GEN-LAST:event_b6ActionPerformed

    private void b7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b7ActionPerformed
      String B7=b7.getText().toString();
             if(b4.getText().toString().equals("0")){b4.setText(B7); b4.setVisible(true); b7.setText("0"); b7.setVisible(false);}
        else if(b8.getText().toString().equals("0")){b8.setText(B7); b8.setVisible(true); b7.setText("0"); b7.setVisible(false);}
    }//GEN-LAST:event_b7ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
      String B8=b8.getText().toString();
             if(b5.getText().toString().equals("0")){b5.setText(B8); b5.setVisible(true); b8.setText("0"); b8.setVisible(false);}
        else if(b7.getText().toString().equals("0")){b7.setText(B8); b7.setVisible(true); b8.setText("0"); b8.setVisible(false);}
        else if(b9.getText().toString().equals("0")){b9.setText(B8); b9.setVisible(true); b8.setText("0"); b8.setVisible(false);}
    }//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
      String B9=b9.getText().toString();
             if(b6.getText().toString().equals("0")){b6.setText(B9); b6.setVisible(true); b9.setText("0"); b9.setVisible(false);}
        else if(b8.getText().toString().equals("0")){b8.setText(B9); b8.setVisible(true); b9.setText("0"); b9.setVisible(false);}
    }//GEN-LAST:event_b9ActionPerformed

    private void bfsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bfsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bfsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

             int[][] initialState ={
                 {Integer.parseInt(b1.getText().toString()) , Integer.parseInt(b2.getText().toString()) , Integer.parseInt(b3.getText().toString())},
                 {Integer.parseInt(b4.getText().toString()) , Integer.parseInt(b5.getText().toString()) , Integer.parseInt(b6.getText().toString())},
                 {Integer.parseInt(b7.getText().toString()) , Integer.parseInt(b8.getText().toString()) , Integer.parseInt(b9.getText().toString())}
                                   };
       int[][]goal={
            {0, 1, 2},
            {3, 4, 5},
            {6, 7, 8}
        };
     if(bfs.isSelected()) {
             long startTime = System.nanoTime(); // Start the timer
             BFS b=new BFS(); 
         String solutionPath = b.solve(initialState);
         long endTime = System.nanoTime(); // End the timer
          long duration = (endTime - startTime) / 1000000; // Calculate duration in milliseconds ( /1000 in seconds ) 
          
           area.setText(area.getText()+"************************************\n");
           area.setText(area.getText()+"*            BFS Search           *\n");
           area.setText(area.getText()+"priority: U - D - L - R\n");
           area.setText(area.getText()+"Path to goal :"+solutionPath+"\n");
           area.setText(area.getText()+"Cost of path:"+solutionPath.length()+"\n");
           area.setText(area.getText()+"Search depth:"+solutionPath.length()+"\n");
           area.setText(area.getText()+"Nodes Expanded:"+b.count+"\n");
           b.count=0;
           area.setText(area.getText()+"running time:"+duration+" milliseconds\n");
           
                 if(solutionPath.equals("No solution found"))
                 {JOptionPane.showMessageDialog(null, "No solution found");}
                 else{
                     JOptionPane.showMessageDialog(null, "Solution found by BFS, press ok to see the next step");
                    char[] letters = solutionPath.toCharArray();
                       int index = 0,depth=0;

          while(index < solutionPath.length()) {
           char letter = solutionPath.charAt(index);;
      
            if(b1.getText().toString().equals("0") && letter=='R')     {b1.setText(b2.getText().toString()); b1.setVisible(true); b2.setText("0"); b2.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b1.getText().toString().equals("0") && letter=='D'){b1.setText(b4.getText().toString()); b1.setVisible(true); b4.setText("0"); b4.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b2.getText().toString().equals("0") && letter=='R')     {b2.setText(b3.getText().toString()); b2.setVisible(true); b3.setText("0"); b3.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b2.getText().toString().equals("0") && letter=='L'){b2.setText(b1.getText().toString()); b2.setVisible(true); b1.setText("0"); b1.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b2.getText().toString().equals("0") && letter=='D'){b2.setText(b5.getText().toString()); b2.setVisible(true); b5.setText("0"); b5.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b3.getText().toString().equals("0") && letter=='L')     {b3.setText(b2.getText().toString()); b3.setVisible(true); b2.setText("0"); b2.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b3.getText().toString().equals("0") && letter=='D'){b3.setText(b6.getText().toString()); b3.setVisible(true); b6.setText("0"); b6.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b4.getText().toString().equals("0") && letter=='U')     {b4.setText(b1.getText().toString()); b4.setVisible(true); b1.setText("0"); b1.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b4.getText().toString().equals("0") && letter=='R'){b4.setText(b5.getText().toString()); b4.setVisible(true); b5.setText("0"); b5.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b4.getText().toString().equals("0") && letter=='D'){b4.setText(b7.getText().toString()); b4.setVisible(true); b7.setText("0"); b7.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b5.getText().toString().equals("0") && letter=='U')     {b5.setText(b2.getText().toString()); b5.setVisible(true); b2.setText("0"); b2.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b5.getText().toString().equals("0") && letter=='D'){b5.setText(b8.getText().toString()); b5.setVisible(true); b8.setText("0"); b8.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b5.getText().toString().equals("0") && letter=='R'){b5.setText(b6.getText().toString()); b5.setVisible(true); b6.setText("0"); b6.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b5.getText().toString().equals("0") && letter=='L'){b5.setText(b4.getText().toString()); b5.setVisible(true); b4.setText("0"); b4.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b6.getText().toString().equals("0") && letter=='U')     {b6.setText(b3.getText().toString()); b6.setVisible(true); b3.setText("0"); b3.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b6.getText().toString().equals("0") && letter=='D'){b6.setText(b9.getText().toString()); b6.setVisible(true); b9.setText("0"); b9.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b6.getText().toString().equals("0") && letter=='L'){b6.setText(b5.getText().toString()); b6.setVisible(true); b5.setText("0"); b5.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b7.getText().toString().equals("0") && letter=='U')     {b7.setText(b4.getText().toString()); b7.setVisible(true); b4.setText("0"); b4.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b7.getText().toString().equals("0") && letter=='R'){b7.setText(b8.getText().toString()); b7.setVisible(true); b8.setText("0"); b8.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b8.getText().toString().equals("0") && letter=='U')     {b8.setText(b5.getText().toString()); b8.setVisible(true); b5.setText("0"); b5.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b8.getText().toString().equals("0") && letter=='R'){b8.setText(b9.getText().toString()); b8.setVisible(true); b9.setText("0"); b9.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b8.getText().toString().equals("0") && letter=='L'){b8.setText(b7.getText().toString()); b8.setVisible(true); b7.setText("0"); b7.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b9.getText().toString().equals("0") && letter=='U')     {b9.setText(b6.getText().toString()); b9.setVisible(true); b6.setText("0"); b6.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b9.getText().toString().equals("0") && letter=='L'){b9.setText(b8.getText().toString()); b9.setVisible(true); b8.setText("0"); b8.setVisible(false); solutionPath = solutionPath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
   
      }
     }
                 
    }  
     else if(dfs.isSelected()){
         long startTime = System.nanoTime(); // Start the timer
         Node1 initialStateNode  = new Node1(initialState);
         Node1 goalNode = new Node1(goal);
         Tree t = new Tree(initialStateNode);
         String solutionpath=t.DFS(initialStateNode , goalNode);
         long endTime = System.nanoTime(); // End the timer
         long duration = (endTime - startTime) / 1000000; // Calculate duration in milliseconds
         
           area.setText(area.getText()+"************************************\n");
           area.setText(area.getText()+"*            DFS Search           *\n");
           area.setText(area.getText()+"priority: U - D - L - R\n");
           area.setText(area.getText()+"Path to goal:"+solutionpath+"\n");
           area.setText(area.getText()+"Cost of path:"+solutionpath.length()+"\n");
           area.setText(area.getText()+"Search depth:"+solutionpath.length()+"\n");
           area.setText(area.getText()+"Nodes Expanded:"+t.count+"\n");
           t.count=0;
           area.setText(area.getText()+"running time:"+duration+" milliseconds\n");
           
        JOptionPane.showMessageDialog(null, "Solution found by DFS, press ok to see the next step");
                    char[] letters = solutionpath.toCharArray();
                       int index = 0,depth=0;
        
          while(index < solutionpath.length()) {
           char letter = solutionpath.charAt(index);
      
            if(b1.getText().toString().equals("0") && letter=='R')     {b1.setText(b2.getText().toString()); b1.setVisible(true); b2.setText("0"); b2.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b1.getText().toString().equals("0") && letter=='D'){b1.setText(b4.getText().toString()); b1.setVisible(true); b4.setText("0"); b4.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b2.getText().toString().equals("0") && letter=='R')     {b2.setText(b3.getText().toString()); b2.setVisible(true); b3.setText("0"); b3.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b2.getText().toString().equals("0") && letter=='L'){b2.setText(b1.getText().toString()); b2.setVisible(true); b1.setText("0"); b1.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b2.getText().toString().equals("0") && letter=='D'){b2.setText(b5.getText().toString()); b2.setVisible(true); b5.setText("0"); b5.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b3.getText().toString().equals("0") && letter=='L')     {b3.setText(b2.getText().toString()); b3.setVisible(true); b2.setText("0"); b2.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b3.getText().toString().equals("0") && letter=='D'){b3.setText(b6.getText().toString()); b3.setVisible(true); b6.setText("0"); b6.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b4.getText().toString().equals("0") && letter=='U')     {b4.setText(b1.getText().toString()); b4.setVisible(true); b1.setText("0"); b1.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b4.getText().toString().equals("0") && letter=='R'){b4.setText(b5.getText().toString()); b4.setVisible(true); b5.setText("0"); b5.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b4.getText().toString().equals("0") && letter=='D'){b4.setText(b7.getText().toString()); b4.setVisible(true); b7.setText("0"); b7.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b5.getText().toString().equals("0") && letter=='U')     {b5.setText(b2.getText().toString()); b5.setVisible(true); b2.setText("0"); b2.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b5.getText().toString().equals("0") && letter=='D'){b5.setText(b8.getText().toString()); b5.setVisible(true); b8.setText("0"); b8.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b5.getText().toString().equals("0") && letter=='R'){b5.setText(b6.getText().toString()); b5.setVisible(true); b6.setText("0"); b6.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b5.getText().toString().equals("0") && letter=='L'){b5.setText(b4.getText().toString()); b5.setVisible(true); b4.setText("0"); b4.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b6.getText().toString().equals("0") && letter=='U')     {b6.setText(b3.getText().toString()); b6.setVisible(true); b3.setText("0"); b3.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b6.getText().toString().equals("0") && letter=='D'){b6.setText(b9.getText().toString()); b6.setVisible(true); b9.setText("0"); b9.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b6.getText().toString().equals("0") && letter=='L'){b6.setText(b5.getText().toString()); b6.setVisible(true); b5.setText("0"); b5.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
           
            if(b7.getText().toString().equals("0") && letter=='U')     {b7.setText(b4.getText().toString()); b7.setVisible(true); b4.setText("0"); b4.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b7.getText().toString().equals("0") && letter=='R'){b7.setText(b8.getText().toString()); b7.setVisible(true); b8.setText("0"); b8.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b8.getText().toString().equals("0") && letter=='U')     {b8.setText(b5.getText().toString()); b8.setVisible(true); b5.setText("0"); b5.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b8.getText().toString().equals("0") && letter=='R'){b8.setText(b9.getText().toString()); b8.setVisible(true); b9.setText("0"); b9.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b8.getText().toString().equals("0") && letter=='L'){b8.setText(b7.getText().toString()); b8.setVisible(true); b7.setText("0"); b7.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b9.getText().toString().equals("0") && letter=='U')     {b9.setText(b6.getText().toString()); b9.setVisible(true); b6.setText("0"); b6.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b9.getText().toString().equals("0") && letter=='L'){b9.setText(b8.getText().toString()); b9.setVisible(true); b8.setText("0"); b8.setVisible(false); solutionpath = solutionpath.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
   
     }
     }
        else if(astar.isSelected()){
       
         long startTime = System.nanoTime(); // Start the timer
                 Astar astar = new Astar(initialState, goal);
        String m=astar.solvePuzzle("Manhattan");
        String e=astar.solvePuzzle("Euclidean");
        
         long endTime = System.nanoTime(); // End the timer
         long duration = (endTime - startTime) / 1000000; // Calculate duration in milliseconds
         
                  String heuristic = "Manhattan";
        List<Node> pathManhattan = astar.findPath(heuristic);
                 heuristic = "Euclidean";
        List<Node> pathEuclidean = astar.findPath(heuristic);
        
           area.setText(area.getText()+"************************************\n");
           area.setText(area.getText()+"*            A* Search           *\n");
           if (pathManhattan.size() < pathEuclidean.size()) {
           area.setText(area.getText()+"Path to goal:"+m+"\n");
           area.setText(area.getText()+"Cost of path:"+m.length()+"\n");
           area.setText(area.getText()+"Search depth:"+m.length()+"\n");
           area.setText(area.getText()+"Number of nodes expanded (Manhattan):" + pathManhattan.size()+"\n");
           area.setText(area.getText()+"Manhattan heuristic is more admissible.\n");
           }
           else if (pathManhattan.size() > pathEuclidean.size()) {
           area.setText(area.getText()+"Path to goal:"+e+"\n");
           area.setText(area.getText()+"Cost of path:"+e.length()+"\n");
           area.setText(area.getText()+"Search depth:"+e.length()+"\n");
           area.setText(area.getText()+"Number of nodes expanded (Manhattan):" + pathEuclidean.size()+"\n");
           area.setText(area.getText()+"Euclidean heuristic is more admissible.\n"); 
        }
           else{
           area.setText(area.getText()+"Path to goal:"+e+"\n");
           area.setText(area.getText()+"Cost of path:"+e.length()+"\n");
           area.setText(area.getText()+"Search depth:"+e.length()+"\n");
           area.setText(area.getText()+"Number of nodes expanded (For Both):" + pathEuclidean.size()+"\n");
           area.setText(area.getText()+"Both heuristics are equally admissible.\n"); 
           }
           area.setText(area.getText()+"running time:"+duration+" milliseconds\n");
           
        JOptionPane.showMessageDialog(null, "Solution found by A*, press ok to see the next step");
                    char[] letters = e.toCharArray();
                       int index = 0,depth=0;
        
          while(index < e.length()) {
           char letter = e.charAt(index);
      
            if(b1.getText().toString().equals("0") && letter=='R')     {b1.setText(b2.getText().toString()); b1.setVisible(true); b2.setText("0"); b2.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b1.getText().toString().equals("0") && letter=='D'){b1.setText(b4.getText().toString()); b1.setVisible(true); b4.setText("0"); b4.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b2.getText().toString().equals("0") && letter=='R')     {b2.setText(b3.getText().toString()); b2.setVisible(true); b3.setText("0"); b3.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b2.getText().toString().equals("0") && letter=='L'){b2.setText(b1.getText().toString()); b2.setVisible(true); b1.setText("0"); b1.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b2.getText().toString().equals("0") && letter=='D'){b2.setText(b5.getText().toString()); b2.setVisible(true); b5.setText("0"); b5.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b3.getText().toString().equals("0") && letter=='L')     {b3.setText(b2.getText().toString()); b3.setVisible(true); b2.setText("0"); b2.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b3.getText().toString().equals("0") && letter=='D'){b3.setText(b6.getText().toString()); b3.setVisible(true); b6.setText("0"); b6.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b4.getText().toString().equals("0") && letter=='U')     {b4.setText(b1.getText().toString()); b4.setVisible(true); b1.setText("0"); b1.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b4.getText().toString().equals("0") && letter=='R'){b4.setText(b5.getText().toString()); b4.setVisible(true); b5.setText("0"); b5.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b4.getText().toString().equals("0") && letter=='D'){b4.setText(b7.getText().toString()); b4.setVisible(true); b7.setText("0"); b7.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b5.getText().toString().equals("0") && letter=='U')     {b5.setText(b2.getText().toString()); b5.setVisible(true); b2.setText("0"); b2.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b5.getText().toString().equals("0") && letter=='D'){b5.setText(b8.getText().toString()); b5.setVisible(true); b8.setText("0"); b8.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b5.getText().toString().equals("0") && letter=='R'){b5.setText(b6.getText().toString()); b5.setVisible(true); b6.setText("0"); b6.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b5.getText().toString().equals("0") && letter=='L'){b5.setText(b4.getText().toString()); b5.setVisible(true); b4.setText("0"); b4.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b6.getText().toString().equals("0") && letter=='U')     {b6.setText(b3.getText().toString()); b6.setVisible(true); b3.setText("0"); b3.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b6.getText().toString().equals("0") && letter=='D'){b6.setText(b9.getText().toString()); b6.setVisible(true); b9.setText("0"); b9.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b6.getText().toString().equals("0") && letter=='L'){b6.setText(b5.getText().toString()); b6.setVisible(true); b5.setText("0"); b5.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
           
            if(b7.getText().toString().equals("0") && letter=='U')     {b7.setText(b4.getText().toString()); b7.setVisible(true); b4.setText("0"); b4.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b7.getText().toString().equals("0") && letter=='R'){b7.setText(b8.getText().toString()); b7.setVisible(true); b8.setText("0"); b8.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b8.getText().toString().equals("0") && letter=='U')     {b8.setText(b5.getText().toString()); b8.setVisible(true); b5.setText("0"); b5.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b8.getText().toString().equals("0") && letter=='R'){b8.setText(b9.getText().toString()); b8.setVisible(true); b9.setText("0"); b9.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b8.getText().toString().equals("0") && letter=='L'){b8.setText(b7.getText().toString()); b8.setVisible(true); b7.setText("0"); b7.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            
            if(b9.getText().toString().equals("0") && letter=='U')     {b9.setText(b6.getText().toString()); b9.setVisible(true); b6.setText("0"); b6.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
            else if(b9.getText().toString().equals("0") && letter=='L'){b9.setText(b8.getText().toString()); b9.setVisible(true); b8.setText("0"); b8.setVisible(false); e = e.substring(1); depth++; System.out.println(letter); JOptionPane.showMessageDialog(null, "Press Ok to Continue.."); continue;}
   
            }
        }
        else {JOptionPane.showMessageDialog(this, "Select specific search to solve it !");}
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TheGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JRadioButton astar;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b7;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JRadioButton bfs;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton dfs;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}